{"version":3,"sources":["assets/images/burger-logo.png","components/hoc/Auxiliar.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Auxiliar","props","children","Logo","className","src","burgerLogo","alt","NavigationItem","active","href","link","NavigationItems","DrawerToggle","onClick","clicked","Toolbar","drawerToggleClicked","Backdrop","show","SideDrawer","attachedClasses","open","closed","join","Layout","useState","showSideDrawer","setShowSideDrawer","BurgerIngredient","ingredient","type","Burger","ingredients","Object","keys","map","ingredientsKey","Array","_","i","key","reduce","arr","el","concat","length","BuildControl","label","added","removed","disabled","controls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","purchaseable","ordered","Modal","nextProps","nextState","this","console","log","modalClosed","style","transform","opacity","Component","Button","btnType","OrderSummary","ingredientSummary","igKey","textTransform","purchaseCancelled","purchaseContinued","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","setIngredients","totalPrice","setTotalPrice","setPurchaseable","purchasing","setPurchasing","purchaseCancelHandler","updatePurchaseState","newIngredients","sum","disabledInfo","alert","updatedCount","updatedIngredients","oldCount","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,yC,uYCE5BC,EAFE,SAACC,GAAD,OAAWA,EAAMC,U,gBCYnBC,G,MAPF,SAACF,GAAD,OACT,yBAAKG,UAAU,QAEX,yBAAKC,IAAKC,IAAYC,IAAI,qBCGnBC,G,MARQ,SAACP,GAAD,OACnB,wBAAIG,UAAU,kBACV,uBAAGA,UAAWH,EAAMQ,OAAS,SAAW,KAAMC,KAAMT,EAAMU,MACrDV,EAAMC,aCKJU,G,MAPS,SAACX,GAAD,OACpB,wBAAIG,UAAU,mBACV,kBAAC,EAAD,CAAgBO,KAAK,IAAIF,QAAM,GAA/B,kBACA,kBAAC,EAAD,CAAgBE,KAAK,KAArB,eCIOE,G,MARM,SAACZ,GAAD,OACjB,yBAAKa,QAASb,EAAMc,QAASX,UAAU,gBACnC,8BACA,8BACA,iCCYOY,G,MAZC,SAACf,GAAD,OACZ,4BAAQG,UAAU,WACd,kBAAC,EAAD,CAAcW,QAASd,EAAMgB,sBAC7B,yBAAKb,UAAU,gBACX,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,eACX,kBAAC,EAAD,UCLGc,G,MANE,SAACjB,GACd,OACIA,EAAMkB,KAAO,yBAAKf,UAAU,WAAWU,QAASb,EAAMc,UAAkB,OCyBjEK,G,MAtBI,SAACnB,GAEhB,IAAIoB,EAAkB,CAAC,aAAc,SAKrC,OAHIpB,EAAMqB,OACND,EAAkB,CAAC,aAAc,SAGjC,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAUF,KAAMlB,EAAMqB,KAAMP,QAASd,EAAMsB,SAC3C,yBAAKnB,UAAWiB,EAAgBG,KAAK,MACjC,yBAAKpB,UAAU,mBACX,kBAAC,EAAD,OAEJ,6BACI,kBAAC,EAAD,WCaLqB,G,MA7BA,SAACxB,GAAU,MAGmByB,oBAAS,GAH5B,mBAGlBC,EAHkB,KAGFC,EAHE,KAczB,OACC,kBAAC,EAAD,KACC,kBAAC,EAAD,CAASX,oBAPX,WAECW,GAAkB,SAAAD,GAAc,OAAKA,QAMpC,kBAAC,EAAD,CACCL,KAAMK,EACNJ,OAdH,WACCK,GAAkB,MAgBjB,0BAAMxB,UAAU,aACdH,EAAMC,a,eCmBI2B,G,MA7CU,SAAC5B,GAEtB,IAAI6B,EAAa,KAEjB,OAAQ7B,EAAM8B,MAEV,IAAM,eACFD,EAAa,yBAAK1B,UAAU,gBAC5B,MAEJ,IAAM,YACF0B,EACI,yBAAK1B,UAAU,YACX,yBAAKA,UAAU,WACf,yBAAKA,UAAU,YAGvB,MAEJ,IAAM,OACF0B,EAAa,yBAAK1B,UAAU,SAC5B,MAEJ,IAAM,SACF0B,EAAa,yBAAK1B,UAAU,WAC5B,MAEJ,IAAM,QACF0B,EAAa,yBAAK1B,UAAU,UAC5B,MAEJ,IAAM,QACF0B,EAAa,yBAAK1B,UAAU,UAC5B,MAEJ,QAAS0B,EAAa,KAG1B,OAAOA,ICXIE,G,MA1BA,SAAC/B,GAKZ,IAAIgC,EAAcC,OAAOC,KAAKlC,EAAMgC,aAAaG,KAAI,SAAAC,GACjD,OAAO,YAAIC,MAAMrC,EAAMgC,YAAYI,KAAkBD,KAAI,SAACG,EAAGC,GACzD,OAAO,kBAAC,EAAD,CAAkBC,IAAKJ,EAAiBG,EAAGT,KAAMM,UAE7DK,QAAO,SAACC,EAAKC,GACZ,OAAOD,EAAIE,OAAOD,KACnB,IAMH,OAJ2B,IAAvBX,EAAYa,SACZb,EAAc,iEAId,yBAAK7B,UAAU,UACX,kBAAC,EAAD,CAAkB2B,KAAK,cACtBE,EACD,kBAAC,EAAD,CAAkBF,KAAK,oBCZpBgB,G,MAVM,SAAC9C,GAClB,OACI,yBAAKG,UAAU,gBACX,yBAAKA,UAAU,SAASH,EAAM+C,OAC9B,4BAAQ5C,UAAU,OAAOU,QAASb,EAAMgD,OAAxC,QACA,4BAAQ7C,UAAU,OAAOU,QAASb,EAAMiD,QAASC,SAAUlD,EAAMkD,UAAjE,WCJNC,G,MAAW,CACb,CAAEJ,MAAO,QAASjB,KAAM,SACxB,CAAEiB,MAAO,QAASjB,KAAM,SACxB,CAAEiB,MAAO,SAAUjB,KAAM,UACzB,CAAEiB,MAAO,OAAQjB,KAAM,UAqBZsB,EAlBO,SAACpD,GACnB,OACI,yBAAKG,UAAU,iBACX,6CAAkB,gCAASH,EAAMqD,MAAMC,QAAQ,KAC9CH,EAAShB,KAAI,SAAAoB,GAAI,OACd,kBAAC,EAAD,CACIf,IAAKe,EAAKR,MACVA,MAAOQ,EAAKR,MACZC,MAAO,kBAAMhD,EAAMwD,gBAAgBD,EAAKzB,OACxCmB,QAAS,kBAAMjD,EAAMyD,kBAAkBF,EAAKzB,OAC5CoB,SAAUlD,EAAMkD,SAASK,EAAKzB,WAGtC,4BAAQ3B,UAAU,cAAc+C,UAAWlD,EAAM0D,aAAc7C,QAASb,EAAM2D,SAA9E,e,8BCcGC,G,0LA5BWC,EAAWC,GAC7B,OAAOD,EAAU3C,OAAS6C,KAAK/D,MAAMkB,O,2CAIrC8C,QAAQC,IAAI,sB,+BAIZ,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CACI/C,KAAM6C,KAAK/D,MAAMkB,KACjBJ,QAASiD,KAAK/D,MAAMkE,cAExB,yBAAK/D,UAAU,QACXgE,MAAO,CACHC,UAAWL,KAAK/D,MAAMkB,KAAO,gBACvB,qBACNmD,QAASN,KAAK/D,MAAMkB,KAAO,IAAM,MAEpC6C,KAAK/D,MAAMC,e,GAvBZqE,cCALC,G,MANA,SAACvE,GACZ,OACI,4BAAQG,UAAW,CAAC,SAAU,CAACH,EAAMwE,UAAUjD,KAAK,KAAMV,QAASb,EAAMc,SAAUd,EAAMC,YC6BlFwE,EA9BM,SAACzE,GAOlB,IAAM0E,EAAoBzC,OAAOC,KAAKlC,EAAMgC,aAAaG,KAAI,SAAAwC,GACzD,OACI,wBAAInC,IAAKmC,GACL,0BAAMR,MAAO,CAAES,cAAe,eAAiBD,GADnD,KACmE3E,EAAMgC,YAAY2C,OAK7F,OACI,kBAAC,EAAD,KACI,0CACA,iFACA,4BACKD,GAEL,2BAAG,+CAAqB1E,EAAMqD,MAAMC,QAAQ,KAC5C,oDACA,kBAAC,EAAD,CAAQkB,QAAQ,SAAS1D,QAASd,EAAM6E,mBAAxC,UACA,kBAAC,EAAD,CAAQL,QAAQ,UAAU1D,QAASd,EAAM8E,mBAAzC,cCtBNC,EAAoB,CACtBC,MAAO,GACPC,OAAQ,GACRC,KAAM,IACNC,MAAO,IAiHIC,EA9GO,WAAO,IAAD,EAEc3D,mBAAS,CAC3CuD,MAAO,EACPG,MAAO,EACPF,OAAQ,EACRC,KAAM,IANc,mBAEjBlD,EAFiB,KAEJqD,EAFI,OAUY5D,mBAAS,GAVrB,mBAUjB6D,EAViB,KAULC,EAVK,OAagB9D,oBAAS,GAbzB,mBAajBiC,EAbiB,KAaH8B,EAbG,OAgBY/D,oBAAS,GAhBrB,mBAgBjBgE,EAhBiB,KAgBLC,EAhBK,KAsBlBC,EAAwB,WAC1BD,GAAc,IAOZE,EAAsB,SAACC,GAEzB,IAAMC,EAAM7D,OAAOC,KAAK2D,GAAgB1D,KAAI,SAAAwC,GACxC,OAAOkB,EAAelB,MACvBlC,QAAO,SAACqD,EAAKnD,GACZ,OAAOmD,EAAMnD,IACd,GAEH6C,EAAgBM,EAAM,IAyCpBC,EAAY,eACX/D,GAGP,IAAK,IAAIQ,KAAOuD,EACZA,EAAavD,GAAOuD,EAAavD,IAAQ,EAG7C,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAOtB,KAAMuE,EAAYvB,YAAayB,GAClC,kBAAC,EAAD,CACItC,MAAOiC,EACPT,kBAAmBc,EACnBb,kBAnEgB,WAC5BkB,MAAM,kBAmEMhE,YAAaA,KAGrB,kBAAC,EAAD,CAAQA,YAAaA,IATzB,KAUI,kBAAC,EAAD,CACIwB,gBA1DiB,SAAC1B,GAE1B,IACMmE,EADWjE,EAAYF,GACG,EAC1BoE,EAAkB,eACjBlE,GAEPkE,EAAmBpE,GAAQmE,EAK3BV,EAHiBD,EADKP,EAAkBjD,IAKxCuD,EAAea,GACfN,EAAoBM,IA6CZzC,kBAzCoB,SAAC3B,GAE7B,IAAMqE,EAAWnE,EAAYF,GAE7B,GAAIqE,EAAW,EAAG,CACd,IAAMF,EAAeE,EAAW,EAC1BD,EAAkB,eACjBlE,GAEPkE,EAAmBpE,GAAQmE,EAK3BV,EAHiBD,EADMP,EAAkBjD,IAKzCuD,EAAea,GACfN,EAAoBM,KA0BhBhD,SAAU6C,EACV1C,MAAOiC,EACP5B,aAAcA,EACdC,QAtFY,WACpB+B,GAAc,QClBPU,MAXf,WAEE,OACE,6BACE,kBAAC,EAAD,KACE,kBAAC,EAAD,SCGYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLtD,QAAQsD,MAAMA,EAAMC,c","file":"static/js/main.acf17e8d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","const Auxiliar = (props) => props.children;\n\nexport default Auxiliar;","import React from 'react';\nimport burgerLogo from \"../../assets/images/burger-logo.png\"\n\nimport \"./styles.css\";\n\nconst Logo = (props) => (\n    <div className=\"Logo\">\n        {/* <img src={burgerLogo} style={{height: props.height}} alt=\"MyBurger Logo\" /> */}\n        <img src={burgerLogo} alt=\"MyBurger Logo\" />\n    </div>\n);\n\nexport default Logo;","import React from 'react';\nimport './styles.css'\n\nconst NavigationItem = (props) => (\n    <li className=\"NavigationItem\">\n        <a className={props.active ? 'active' : null} href={props.link}>\n            {props.children}\n        </a>\n    </li>\n);\n\nexport default NavigationItem;","import React from 'react';\nimport NavigationItem from './NavigationItem/NavigationItem';\nimport './styles.css'\n\nconst NavigationItems = (props) => (\n    <ul className=\"NavigationItems\">\n        <NavigationItem link=\"/\" active>Burger Builder</NavigationItem>\n        <NavigationItem link=\"/\">Checkout</NavigationItem>\n    </ul>\n);\n\nexport default NavigationItems;","import React from 'react';\nimport './styles.css';\n\nconst DrawerToggle = (props) => (\n    <div onClick={props.clicked} className=\"DrawerToggle\">\n        <div />\n        <div />\n        <div />\n    </div>\n);\n\nexport default DrawerToggle;","import React from 'react';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from \"../SideDrawer/DrawerToggle/DrawerToggle\";\n\nimport './styles.css'\n\nconst Toolbar = (props) => (\n    <header className=\"Toolbar\">\n        <DrawerToggle clicked={props.drawerToggleClicked} />\n        <div className=\"Toolbar-Logo\">\n            <Logo />\n        </div>\n        <nav className=\"DesktopOnly\">\n            <NavigationItems />\n        </nav>\n    </header>\n);\n\nexport default Toolbar;","import React from 'react';\nimport \"./styles.css\";\n\nconst Backdrop = (props) => {\n    return (\n        props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null\n    );\n}\n\nexport default Backdrop;","import React from 'react';\nimport Logo from \"../../Logo/Logo\";\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\nimport Auxiliar from \"../../hoc/Auxiliar\";\n\nimport './styles.css';\n\nconst SideDrawer = (props) => {\n\n    let attachedClasses = ['SideDrawer', 'Close'];\n\n    if (props.open) {\n        attachedClasses = ['SideDrawer', 'Open'];\n    }\n    return (\n        <Auxiliar>\n            <Backdrop show={props.open} clicked={props.closed} />\n            <div className={attachedClasses.join(' ')}>\n                <div className=\"SideDrawer-Logo\">\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems />\n                </nav>\n            </div>\n        </Auxiliar>\n    );\n}\n\nexport default SideDrawer;","import React, { useState } from \"react\";\nimport Auxiliar from \"../hoc/Auxiliar\";\nimport Toolbar from \"../Navigation/Toolbar/Toolbar\";\nimport SideDrawer from \"../Navigation/SideDrawer/SideDrawer\";\n\nimport \"./styles.css\";\n\nconst Layout = (props) => {\n\n\t// Hook and its function to control whether we show the SideDrawer or not\n\tconst [showSideDrawer, setShowSideDrawer] = useState(false);\n\n\tfunction sideDrawerCloserHandler() {\n\t\tsetShowSideDrawer(false);\n\t}\n\n\tfunction sideDrawerToggleHandler() {\n\t\t// Setting the new State based on the old State in a safe way\n\t\tsetShowSideDrawer(showSideDrawer => !showSideDrawer);\n\t}\n\n\treturn (\n\t\t<Auxiliar>\n\t\t\t<Toolbar drawerToggleClicked={sideDrawerToggleHandler} />\n\t\t\t<SideDrawer\n\t\t\t\topen={showSideDrawer}\n\t\t\t\tclosed={sideDrawerCloserHandler}\n\n\t\t\t/>\n\t\t\t<main className=\"Container\">\n\t\t\t\t{props.children}\n\t\t\t</main>\n\t\t</Auxiliar>\n\t);\n}\n\nexport default Layout;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport \"./styles.css\"\n\nconst BurgerIngredient = (props) => {\n\n    let ingredient = null;\n\n    switch (props.type) {\n\n        case (\"bread-bottom\"):\n            ingredient = <div className=\"BreadBottom\"></div>;\n            break;\n\n        case (\"bread-top\"):\n            ingredient = (\n                <div className=\"BreadTop\">\n                    <div className=\"Seeds1\"></div>\n                    <div className=\"Seeds2\"></div>\n                </div>\n            );\n            break;\n\n        case (\"meat\"):\n            ingredient = <div className=\"Meat\"></div>;\n            break;\n\n        case (\"cheese\"):\n            ingredient = <div className=\"Cheese\"></div>;\n            break;\n\n        case (\"salad\"):\n            ingredient = <div className=\"Salad\"></div>;\n            break;\n\n        case (\"bacon\"):\n            ingredient = <div className=\"Bacon\"></div>;\n            break;\n\n        default: ingredient = null;\n    }\n\n    return ingredient;\n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;","import React from \"react\";\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\n\nimport \"./styles.css\";\n\nconst Burger = (props) => {\n\n    // We are receiving props.ingredients as an object and converting\n    // it to an array by using Array() method in order to apply map function to them.\n    // We do so to dynamically output a BurgerIngredient component\n    let ingredients = Object.keys(props.ingredients).map(ingredientsKey => {\n        return [...Array(props.ingredients[ingredientsKey])].map((_, i) => {\n            return <BurgerIngredient key={ingredientsKey + i} type={ingredientsKey} />;\n        });\n    }).reduce((arr, el) => {\n        return arr.concat(el)\n    }, []);\n\n    if (ingredients.length === 0) {\n        ingredients = <p>Please, start adding ingredients!</p>\n    }\n\n    return (\n        <div className=\"Burger\">\n            <BurgerIngredient type=\"bread-top\" />\n            {ingredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n}\n\nexport default Burger;","import React from \"react\";\n\nimport \"./styles.css\";\n\nconst BuildControl = (props) => {\n    return (\n        <div className=\"BuildControl\">\n            <div className=\"Label\">{props.label}</div>\n            <button className=\"More\" onClick={props.added}>More</button>\n            <button className=\"Less\" onClick={props.removed} disabled={props.disabled}>Less</button>\n        </div>\n    );\n}\n\nexport default BuildControl;","import React from \"react\";\nimport BuildControl from \"./BuildControl/BuildControl\";\n\nimport \"./styles.css\";\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Meat', type: 'meat' },\n];\n\nconst BuildControls = (props) => {\n    return (\n        <div className=\"BuildControls\">\n            <p>Current price: <strong>{props.price.toFixed(2)}</strong></p>\n            {controls.map(ctrl => (\n                <BuildControl\n                    key={ctrl.label}\n                    label={ctrl.label}\n                    added={() => props.ingredientAdded(ctrl.type)}\n                    removed={() => props.ingredientRemoved(ctrl.type)}\n                    disabled={props.disabled[ctrl.type]}\n                />\n            ))}\n            <button className=\"OrderButton\" disabled={!props.purchaseable} onClick={props.ordered}>ORDER NOW</button>\n        </div>\n    );\n}\n\nexport default BuildControls;","import React, { Component } from \"react\";\nimport Auxiliar from \"../../hoc/Auxiliar\";\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\n\nimport \"./styles.css\";\n\n// This Modal will only updates when 'props.show' updates too\n// Thats why its extending React Component\n// We could do the same using Hooks but I think it would be more difficulty ;p\nclass Modal extends Component {\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.show !== this.props.show;\n    }\n\n    componentDidUpdate() {\n        console.log(\"Modal did update\");\n    }\n\n    render() {\n        return (\n            <Auxiliar>\n                <Backdrop\n                    show={this.props.show}\n                    clicked={this.props.modalClosed}\n                />\n                <div className=\"Modal\"\n                    style={{\n                        transform: this.props.show ? 'translateY(0)'\n                            : 'translateY(-100vh)',\n                        opacity: this.props.show ? '1' : '0'\n                    }}>\n                    {this.props.children}\n                </div>\n            </Auxiliar >\n        )\n    }\n}\n\nexport default Modal;","import React from 'react';\nimport './styles.css'\n\nconst Button = (props) => {\n    return (\n        <button className={['Button', [props.btnType]].join(' ')} onClick={props.clicked}>{props.children}</button>\n    );\n}\n\nexport default Button;","import React /*,{ useEffect }*/ from \"react\";\nimport Button from \"../../UI/Button/Button\";\nimport Aux from \"../../hoc/Auxiliar\";\n\nconst OrderSummary = (props) => {\n\n    // Just to check when this component is updating\n    // useEffect(() => {\n    //     console.log(\"Atualizou o Order\");\n    // })\n\n    const ingredientSummary = Object.keys(props.ingredients).map(igKey => {\n        return (\n            <li key={igKey}>\n                <span style={{ textTransform: 'capitalize' }}>{igKey}</span>: {props.ingredients[igKey]}\n            </li>\n        );\n    });\n\n    return (\n        <Aux>\n            <h3>Your order</h3>\n            <p>A delicious burger with the following ingredients:</p>\n            <ul>\n                {ingredientSummary}\n            </ul>\n            <p><strong>Toal price: {props.price.toFixed(2)}</strong></p>\n            <p>Continue to checkout?</p>\n            <Button btnType=\"Danger\" clicked={props.purchaseCancelled}>CANCEL</Button>\n            <Button btnType=\"Success\" clicked={props.purchaseContinued}>CONTINUE</Button>\n        </Aux>\n    );\n}\n\nexport default OrderSummary;","import React, { useState } from \"react\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Auxiliar from \"../../components/hoc/Auxiliar\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n}\n\nconst BurgerBuilder = () => {\n\n    const [ingredients, setIngredients] = useState({\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0,\n    });\n\n    // hook to control the total price of our burger\n    const [totalPrice, setTotalPrice] = useState(2);\n\n    // hook to control if we can purchase\n    const [purchaseable, setPurchaseable] = useState(false);\n\n    // hook to control wheter we are purchasing a burger or not\n    const [purchasing, setPurchasing] = useState(false);\n\n    const purchaseHandler = () => {\n        setPurchasing(true);\n    }\n\n    const purchaseCancelHandler = () => {\n        setPurchasing(false);\n    }\n\n    const purchaseContinueHandler = () => {\n        alert('You continue!');\n    }\n\n    const updatePurchaseState = (newIngredients) => {\n\n        const sum = Object.keys(newIngredients).map(igKey => {\n            return newIngredients[igKey];\n        }).reduce((sum, el) => {\n            return sum + el;\n        }, 0);\n\n        setPurchaseable(sum > 0); // sets purchaseable to true if sum > 0 or false otherwise\n    }\n\n    const addIngredientHandler = (type) => {\n\n        const oldCount = ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatedIngredients = {\n            ...ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = totalPrice;\n        const newPrice = oldPrice + priceAddition;\n\n        setTotalPrice(newPrice);\n        setIngredients(updatedIngredients);\n        updatePurchaseState(updatedIngredients);\n\n    }\n\n    const removeIngredientHandler = (type) => {\n\n        const oldCount = ingredients[type];\n\n        if (oldCount > 0) {\n            const updatedCount = oldCount - 1;\n            const updatedIngredients = {\n                ...ingredients\n            };\n            updatedIngredients[type] = updatedCount;\n            const priceDeduction = INGREDIENT_PRICES[type];\n            const oldPrice = totalPrice;\n            const newPrice = oldPrice - priceDeduction;\n\n            setTotalPrice(newPrice);\n            setIngredients(updatedIngredients);\n            updatePurchaseState(updatedIngredients);\n        }\n    }\n\n    const disabledInfo = {\n        ...ingredients\n    };\n\n    for (let key in disabledInfo) {\n        disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return (\n        <Auxiliar>\n            <Modal show={purchasing} modalClosed={purchaseCancelHandler}>\n                <OrderSummary\n                    price={totalPrice}\n                    purchaseCancelled={purchaseCancelHandler}\n                    purchaseContinued={purchaseContinueHandler}\n                    ingredients={ingredients}\n                />\n            </Modal>\n            <Burger ingredients={ingredients} />  {/* graphic representation */}\n            <BuildControls\n                ingredientAdded={addIngredientHandler}\n                ingredientRemoved={removeIngredientHandler}\n                disabled={disabledInfo}\n                price={totalPrice}\n                purchaseable={purchaseable}\n                ordered={purchaseHandler}\n            />\n        </Auxiliar>\n    );\n}\n\nexport default BurgerBuilder;","import React from 'react';\nimport Layout from \"./components/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\n\nfunction App() {\n\n  return (\n    <div>\n      <Layout>\n        <BurgerBuilder></BurgerBuilder>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport \"./assets/styles/styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}